generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
  other
}

enum BodyType {
  ectomorph
  mesomorph
  endomorph
  unknown
}

enum FitnessLevel {
  beginner
  intermediate
  advanced
}

enum PhysicalActivityLevel {
  very_low
  low
  medium
  high
  very_high
}

enum WorkSchedule {
  early
  late
  shift
  flexible
  normal
}

enum WorkoutLocation {
  home
  gym
  outdoor
  other
}

enum PlanUpdateFrequency {
  weekly
  monthly
  quarterly
}

model User {
  id                   String    @id @default(uuid())
  name                 String?   @db.VarChar(50)
  email                String    @unique @db.VarChar(100)
  password             String
  goal                 String?   @db.VarChar(100)
  phone                String?   @db.VarChar(20)
  preferredLanguage    String?   @db.VarChar(5)
  profilePhotoUrl      String?   @db.VarChar(250)
  dateOfBirth          DateTime?
  gender               Gender?
  city                 String?   @db.VarChar(50)
  country              String?   @db.VarChar(50)
  heightCm             Int?      @db.SmallInt
  weightKg             Decimal?  @db.Decimal(5,2)
  bodyType             BodyType?
  fitnessLevel         FitnessLevel?
  healthConditions     String[]  @db.VarChar(100)
  allergies            String[]  @db.VarChar(100)
  foodRestrictions     String[]  @db.VarChar(50)
  jobType              String?   @db.VarChar(50)
  workHoursPerDay      Float?
  workSchedule         WorkSchedule?
  wakeUpTime           String?   @db.VarChar(5)
  bedTime              String?   @db.VarChar(5)
  sleepHours           Float?
  familyStatus         String?   @db.VarChar(50)
  mealsPerDay          Int?      @db.SmallInt
  eatsOutOften         Boolean?
  favoriteActivities   String[]
  gymMember            Boolean?
  physicalActivityLevel PhysicalActivityLevel?
  stepsPerDay          Int?
  currentSports        String[]
  newActivitiesInterest String[]
  minutesPerWorkout    Int?
  workoutsPerWeek      Int?
  workoutLocation      WorkoutLocation?
  equipmentAvailable   String[]
  dietType             String?   @db.VarChar(50)
  favoriteFoods        String[]
  dislikedFoods        String[]
  cuisinePreference    String[]
  supplements          String[]
  eatingHabits         String?   @db.VarChar(100)
  coffeePerDay         Int?
  teaPerDay            Int?
  sugarPerDay          Int?
  motivationLevel      Int?
  mainObstacles        String?   @db.VarChar(200)
  notifications        Boolean?
  successDefinition    String?   @db.VarChar(200)
  previousFitnessExperience String? @db.VarChar(200)
  planUpdateFrequency  PlanUpdateFrequency?
  hasInsurance         Boolean?
  smokes               Boolean?
  alcohol              String?   @db.VarChar(50)
  stressLevel          Int?
  medications          String[]  @db.VarChar(100)
  smartWatch           Boolean?
  goalDeadline         DateTime?
  wantsRestRecommendations Boolean?
  accessLevel          Int?      @default(0)
  created_at           DateTime  @default(now())

  @@map("users")
}
